{"ast":null,"code":"var _jsxFileName = \"/Users/joannebadua/Desktop/reading-rainbow-google-api/client/src/pages/Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\"; // import API from \"../controllers/bookControllers\";\n// dont need to import in the front end because this is a back-end file\n\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      query: \"\"\n    };\n\n    this.saveBook = index => {\n      let bookData = this.state.books[index];\n      const newBook = {\n        title: bookData.volumeInfo.title,\n        author: bookData.volumeInfo.author,\n        image: bookData.volumeInfo.image,\n        link: bookData.volumeInfo.link,\n        description: bookData.volumeInfo.description,\n        id: bookData.volumeInfo.id\n      };\n      API.saveBook(newBook);\n      console.log(\"newBook\", newBook); // .then(res => {\n      //   const newBookarr = this.state.books.filter((newBook) => {\n      //       return newBook;\n      // }\n      // )\n      // }) \n      // return all books but the one with the newBook.id\n      // this.setState({\n      //   books: newBookarr\n      // })\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.query) {\n        API.googleBooks(this.state.query).then(res => this.setState({\n          books: res,\n          query: \"\"\n        })).catch(err => console.log(err));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.query,\n      onChange: this.handleInputChange,\n      name: \"query\",\n      placeholder: \"For Example: Noli Me Tangere (required)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(FormBtn, {\n      disabled: !this.state.query,\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Search\")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Books On My List\")), this.state.books.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.books.map((book, i) => React.createElement(ListItem, {\n      key: \"googlebook-\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, book.volumeInfo.title), React.createElement(\"img\", {\n      href: book.volumeInfo.imageLinks.thumbnail,\n      alt: book.volumeInfo.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, book.volumeInfo.description), React.createElement(\"a\", {\n      href: book.volumeInfo.selfLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"View book\"), React.createElement(\"button\", {\n      onClick: () => this.saveBook(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Save\")))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"No Results to Display\"))));\n  }\n\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/joannebadua/Desktop/reading-rainbow-google-api/client/src/pages/Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","state","books","query","saveBook","index","bookData","newBook","title","volumeInfo","author","image","link","description","id","console","log","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","googleBooks","then","res","catch","err","render","length","map","book","i","imageLinks","thumbnail","selfLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import API from \"../controllers/bookControllers\";\n// dont need to import in the front end because this is a back-end file\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  state = {\n    books: [],\n    query: \"\"\n  };\n\n  saveBook = (index) => {\n    let bookData = this.state.books[index];\n    \n    const newBook = {\n      title: bookData.volumeInfo.title,\n      author: bookData.volumeInfo.author,\n      image: bookData.volumeInfo.image,\n      link: bookData.volumeInfo.link,\n      description: bookData.volumeInfo.description,\n      id: bookData.volumeInfo.id\n    }\n\n    API.saveBook(newBook)\n    console.log(\"newBook\", newBook)\n    // .then(res => {\n    //   const newBookarr = this.state.books.filter((newBook) => {\n    //       return newBook;\n      // }\n      // )\n    // }) \n      // return all books but the one with the newBook.id\n\n      // this.setState({\n      //   books: newBookarr\n      // })\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n      };\n    \n      handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.query) {\n          API.googleBooks(this.state.query)\n            .then(res => this.setState({\n                books: res, \n                query: \"\",\n                \n              }))\n            .catch(err => console.log(err));\n        }\n      };\n    \n      render() {\n        return (\n          <Container fluid>\n            <Row>\n              <Col size=\"md-6\">\n                <Jumbotron>\n                  <h1>What Books Should I Read?</h1>\n                </Jumbotron>\n                <form>\n                  <Input\n                    value={this.state.query}\n                    onChange={this.handleInputChange}\n                    name=\"query\"\n                    placeholder=\"For Example: Noli Me Tangere (required)\"\n                  />\n                  <FormBtn\n                    disabled={!(this.state.query)}\n                    onClick={this.handleFormSubmit}\n                  >\n                    Search\n                  </FormBtn>\n                </form>\n              </Col>\n              </Row>\n\n              <Row>\n              <Col size=\"md-6 sm-12\">\n                <Jumbotron>\n                  <h1>Books On My List</h1>\n                </Jumbotron>\n                {this.state.books.length ? (\n                  <List>\n                    {this.state.books.map((book, i) => (\n                      <ListItem key={`googlebook-${i}`}>\n                        <h4>{book.volumeInfo.title}</h4>\n                        <img href={book.volumeInfo.imageLinks.thumbnail} alt={book.volumeInfo.title}/>\n                        <p>{book.volumeInfo.description}</p>\n                        <a href={book.volumeInfo.selfLink}>View book</a>\n                        <button onClick={()=>(this.saveBook(i))}>Save</button>\n                      </ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <h3>No Results to Display</h3>\n                )}\n              </Col>\n            </Row>\n          </Container>\n        );\n      }\n    }\n\n\n    export default Books;"]},"metadata":{},"sourceType":"module"}